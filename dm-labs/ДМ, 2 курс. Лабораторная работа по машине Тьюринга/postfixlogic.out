1

S 0 -> get_op 0 ^
S 1 -> get_op 1 ^

get_op 0 -> get_op 0 >
get_op 1 -> get_op 1 >
get_op _ -> AC _ <
get_op o -> state o <
get_op a -> state a <

state 0 -> state_0 _ <
state 1 -> state_1 _ <
state _ -> state _ <

state_0 0 -> state_00 _ >
state_0 1 -> state_01 _ >
state_0 _ -> state_0 _ <
state_1 0 -> state_10 _ >
state_1 1 -> state_11 _ >
state_1 _ -> state_1 _ <

state_00 _ -> state_00 _ > 
state_01 _ -> state_01 _ > 
state_10 _ -> state_10 _ > 
state_11 _ -> state_11 _ > 

state_00 o -> get_op 0 ^
state_01 o -> get_op 1 ^
state_10 o -> get_op 1 ^
state_11 o -> get_op 1 ^
state_00 a -> get_op 0 ^
state_01 a -> get_op 0 ^
state_10 a -> get_op 0 ^
state_11 a -> get_op 1 ^



s <переходим_в_режим_состояния._считывая_число_переходим_в_соответствующее_состояние_касательно_0_или_1._Далее_считываем_следующее_число,_создаавя_еще_несколько_видов_состояний_00,_01,_11,_10._Потом_из_этих_состояний_выполняем_соответствующую_операцию_и_или_или,_написав_вместо_нее_результат_и_перейдя_в_режим_нулевого_состояния.> -> s // ^


s <а_так_сперва_я_сделал_программу_для_одноленточной_машины,_но_сейчас_просто_подправил_её_в_многоленточную_с_одной_лентой> -> s // ^
s <еще_немного_модернезировал_программу_и_сделал_так,_что_она_сперва_находит_операцию,_потом_берет_2_предыдущих_числа_входя_в_соответствующее_состояние,_вновь_приходит_к_операции_и_вместо_нее_записывает_результат.Таким_образом_спокойно_все_работает(наверно.Еще_не_отправлял_нав_сервер)> -> s // ^